plugins {
    id 'fabric-loom' version '1.9-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

repositories {}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    
    // Switch back to Yarn
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modApi "dev.felnull:special-model-loader:1.4.0+pre.1"
    include "dev.felnull:special-model-loader:1.4.0+pre.1"

    include modImplementation("dev.kosmx.player-anim:player-animation-lib-fabric:${project.player_anim}")
    //You might want bendy-lib. playerAnimator will wrap it.
    // include modRuntimeOnly("io.github.kosmx.bendy-lib:bendy-lib-fabric:${project.bendylib_version}")
}


repositories {
	maven { url "https://maven.parchmentmc.org" }
	maven {
		name = "FelNull Maven"
		url = "https://maven.felnull.dev"
	}

    maven {
        name "KosmX's maven"
        url 'https://maven.kosmx.dev/'
    }
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version
    }
}

def targetJavaVersion = 21
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release.set(targetJavaVersion)
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
    from("NOTICE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {}
}